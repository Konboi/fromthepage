// Generated by CoffeeScript 1.6.3
/*
@preserve jQuery.PrettyHTMLDiff 1.0.3
See https://github.com/arnab/jQuery.prettyHTMLDiff/
*/


(function() {
    var $;
  
    $ = jQuery;
  
    $.fn.extend({
      prettyHTMLDiff: function(options) {
        var dmp, settings;
        settings = {
          originalContainer: ".original",
          changedContainer: ".changed",
          diffContainer: ".diff",
          cleanup: true,
          debug: false
        };
        settings = $.extend(settings, options);
        $.fn.prettyHTMLDiff.debug("Options: ", settings, settings);
        dmp = new diff_match_patch();
        return this.each(function() {
          var changed, diff_as_html, diffs, original;
          original = ($(settings.originalContainer, this).text() || "").trim();
          $.fn.prettyHTMLDiff.debug("Original HTML found: ", original, settings);
          changed = ($(settings.changedContainer, this).text() || "").trim();
          $.fn.prettyHTMLDiff.debug("Changed HTML found: ", changed, settings);
          diffs = dmp.diff_main(original, changed);
  
          if (settings.cleanup) {
            dmp.diff_cleanupSemantic(diffs);
          }
          $.fn.prettyHTMLDiff.debug("Diffs: ", diffs, settings);
          diff_as_html = $.map(diffs, function(diff) {
            return $.fn.prettyHTMLDiff.createHTML(diff);
          });
  
          $(settings.diffContainer, this).html(
            dmp.diff_prettyHtml(diffs)
              .replace(/&para;/g, '')
          );
          return this;
        });
      }
    });
  
    $.fn.prettyHTMLDiff.debug = function(message, object, settings) {
      if (settings.debug) {
        return console.log(message, object);
      }
    };
  
    $.fn.prettyHTMLDiff.createHTML = function(diff) {
      var data, html, operation, text;
      html = [];
      operation = diff[0];
      data = diff[1];
      text = data
      switch (operation) {
        case DIFF_INSERT:
          // Add logic to handle tables
          if (data.startsWith("<td>")) {
            return '<td><ins>' + text + '</ins></td>';
          } else {
            return '<ins>' + text + '</ins>';
          }
        case DIFF_DELETE:
          // Add logic to handle tables
          if (data.startsWith("<td>")) {
            return '<td><del>' + text + '</del></td>';
          } else {
            return '<del>' + text + '</del>';
          }
        case DIFF_EQUAL:
          return text ;
      }
    };
  
  }).call(this);
  