=render({ :partial => '/shared/collection_tabs', :locals => { :selected => 5, :collection_id => @collection }})
=render({ :partial => 'edit_tabs', :locals => { :selected => 4}})

.collection-settings-wrapper
  =form_for :collection, url: collection_update_path(@collection) do |f|
    =validation_summary @collection.errors
    table.form.collection-settings
      tr 
        th(colspan="2")
          h3 
            =t('.collection_privacy')
            i =@collection.is_public ? t('.public') : t('.private')
      tr 
        th
          -if @collection.restricted
            p =t('.collection_restricted_description')
          -else
            p =t('.collection_public_description')
        td
          -if @collection.restricted
            =link_to(collection_publish_collection_path(:collection_id => @collection.id), class: 'button')
              =svg_symbol '#icon-unlock', class: 'icon'
              span =t('.make_collection_public')
          -else
            =link_to(collection_restrict_collection_path(:collection_id => @collection.id), class: 'button')
              =svg_symbol '#icon-lock', class: 'icon'
              span =t('.make_collection_private')
      tr
        th 
          h3 =t('.collection_collaborators')
          p =t('.collection_collaborators_description')
          p =link_to(t('.edit_collaborators'), collection_edit_collaborators_path(@collection.slug), id: 'edit-collaboators-button', class: 'button', disabled: @collection.is_public, :data => { litebox: { hash: 'edit-collaborators', noscroll: false }})
        td
          -@collaborators.each do |user|
            .user-label
              =profile_picture(user)
              .username
                =link_to user.display_name, user_profile_path(user)
      tr 
        th
          h3 =t('.collection_owners')
          p =t('.collection_owners_description')
          p =link_to(t('.edit_owners'), collection_edit_owners_path(@collection.slug), id: 'edit-owners-button', class: 'button', :data => { litebox: { hash: 'edit-owners', noscroll: false }})
        td
          -@owners.each do |user|
            .user-label
              =profile_picture(user)
              .username
                =link_to user.display_name, user_profile_path(user)
      tr
        th 
          h3 =t('.blocked_users')
          p =t('.block_users_description')
          p =link_to(t('.block'), collection_block_users_path(@collection.slug), id: 'block-users-button', class: 'button', disabled: !@collection.is_public, :data => { litebox: { hash: 'block-users', noscroll: false, remote: true  }})
        td
          -@blocked_users.each do |user|
            .user-label
              =profile_picture(user)
              .username
                =link_to user.display_name, user_profile_path(user)
      tr
        td(colspan="2")
          h3 =t('.api_access')
          p =t('.api_access_description')
      tr 
        td(colspan="2")
          =f.radio_button :api_access, true
          =f.label :api_access_true, t('.open_api'), class: 'big'
          br
          =f.radio_button :api_access, false
          =f.label :api_access_false, t('.closed_api'), class: 'big'
      tr 
        td(colspan="2")
          =link_to({ :action => 'restrict_transcribed', :collection_id => @collection.id }, class: 'button action-btn')
            span =t('.restrict_completed_works')
          p =t('.restricted_completed_works_description', work_count: @collection.works.joins(:work_statistic).where('work_statistics.complete' => 100, :restrict_scribes => false).count)
      tr 
        td: td: td
          .toolbar
            .toolbar_group
              =f.button t('.save_changes'), class: 'big', id: 'collection_settings_save'
